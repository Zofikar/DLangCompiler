lib = lib global_allowed
|     global_allowed
global_allowed = function | variable_declaration | struct_declaration
type_declaration = TYPE | "mut" TYPE
params = variable_declaration_list "," type_declaration
|        type_declaration
function_declaration = "fn" IDENTIFIER "(" params ")" type_declaration
function_declaration_list = function_declaration_list function_declaration
|                           function_declaration
function = function_declaration statement
function_list = function_list function
|               function
function_call = IDENTIFIER "(" expressions ")"
statements = statements statement
identifiers_list = identifiers_list "," IDENTIFIER
|                  IDENTIFIER
variable_identifier_declaration = IDENTIFIER
|                      IDENTIFIER "=" expression
variable_declaration_list = variable_declaration_list "," variable_identifier_declaration
|                           variable_identifier_declaration
variable_declaration = type_declaration variable`_declaration_list
struct_declaration = "struct" IDENTIFIER "{" variable_declaration_list "}"
trait_declaration = "trait" IDENTIFIER "{" function_declaration_list "}"
trait_implementation = "struct" IDENTIFIER "impl" IDENTIFIER "{" function_declaration_list "}"
statement = "{" statements "}"
|           "if" "(" expression ")" statement
|           "if" "(" expression ")" statement "else" statement
|           "while" "(" expression ")" statement
|           "return" expression ";"
|           variable_declaration ";"
|           IDENTIFIER ":=" expression ";"
|           expression ";"
|           ";"
expressions = expressions "," expression
|            expression
expression = INTEGER_LITERAL
|            STRING_LITERAL
|            IDENTIFIER
|            expression "[" expression "]"
|            "(" expressions ")"
|            expression BIN_OP expression
|            UN_OP expression
|            INC_OP expression
|            DEC_OP expression
|            expression INC_OP
|            expression DEC_OP
|            expression "?" expression ":" expression
|            function_call
comparison_operators = "<" | ">" | "<=" | ">=" | "==" | "!="
arithmetic_operators = "*" | "/" | "%" | "+" | "-"
bitwise_operators = "&" | "|" | "^" | "<<" | ">>"
logical_operators = "&&" | "||"
assignment_operators = "=" | logical_operators"=" | arithmetic_operators"=" | bitwise_operators"="

BIN_OP = comparison_operators | arithmetic_operators | bitwise_operators | logical_operators | assignment_operators

INC_OP = "++"
DEC_OP = "--"

UN_OP =  "!" | "~" | "-"